<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №1: Введение в JavaScript" next="section6.xml" prev="section4.xml" summ="0">
<h2>Ввод/вывод данных. Диалоговые окна</h2>
<p>Одним из ключевых моментов в программировании всегда было и будет взаимодействие с пользователем. Чаще всего это взаимодействие осуществляется путем обмена данными между программой и пользователем. Одним из способов реализации такого обмена в JavaScript является выдача диалоговых окон с сообщениями или запросами на ввод данных.
</p>
<p>В JavaScript реализовано 3 метода, позволяющие выводить пользователю диалоговые окна:</p>
<ul>
	<li><code><stdfunc>alert</stdfunc></code></li>
	<li><code><stdfunc>confirm</stdfunc></code></li>
	<li><code><stdfunc>prompt</stdfunc></code></li>
</ul>
<p>Рассмотрим каждый метод более подробно.</p>

<h3>alert</h3>
<p>Метод <code><stdfunc>alert</stdfunc></code> используется для вывода простейшего диалогового окна, содержащего текст сообщения и единственную кнопку "Ok". Формат вызова данной функции:
</p>
<example>
<stdfunc>alert</stdfunc>(<str>"Текст сообщения"</str>);
</example>

<h3>confirm</h3>
<p>Функция <code><stdfunc>confirm</stdfunc></code> позволяет вывести пользователю диалоговое окно, содержащее текст сообщения и кнопки "Ok" и "Cancel". Используется в тех случаях, когда пользователь должен сделать выбор. Формат вызова данной функции:
</p>
<example>
<kw>var</kw> result=<stdfunc>confirm</stdfunc>(<str>"Текст вопроса"</str>);
<comment>//условная конструкция для проверки результата</comment>&#160;
<kw>if</kw>(fesult) { 
    <comment>/* действия */</comment> 
} 
</example>

<p>Функция <code><stdfunc>confirm</stdfunc></code> возвращает логическое значение в зависимости от нажатой пользователем кнопки: "Ok" соответствует значению <code><kw>true</kw></code>, "Cancel" - значению <code><kw>false</kw></code>. Как правило, результат работы функции присваивают переменной, для дальнейшего анализа, как это показано в примере выше.
</p>

<h3>prompt</h3>
<p>Функция <code><stdfunc>prompt</stdfunc></code> позволяет вывести пользователю диалоговое окно запроса на ввод данных. Используется в тех случаях, когда пользователь должен ввести строку текста. Формат вызова данной функции:
</p>
<example>
<kw>var</kw> str=<stdfunc>prompt</stdfunc>(<str>"Запрос на ввод данных"</str>, <i>значение_по_умолчанию</i>);
</example>

<p>Необходимо помнить, что функция <code><stdfunc>prompt</stdfunc></code> возвращает результат строкового типа. Поэтому, прежде чем его использовать в арифметических выражениях, необходимо выполнить <i>преобразование типов</i> к числовому. Это можно сделать при помощи следующих функций:
</p>
<ul>
	<li><code><stdfunc>parseInt</stdfunc>(<str>"строка"</str>)</code> - преобразует строку в целое число;</li>
	<li><code><stdfunc>parseFloat</stdfunc>(<str>"строка"</str>)</code> - преобразует строку в число с плавающей точкой.</li>
</ul>
<p>Однако, преобразование строки в число можно осуществить не во всех случаях. Поэтому, чтобы избавить себя от потенциальной ошибки, необходимо сначала проверить - можно ли выполнить такое преобразование. Для этих целей используется функция <code><b>isNaN</b>(<i>строка</i>)</code>. Данная функция возвращает истину, если строка не может быть преобразована в число, и ложь в противном случае.</p>
<tip start="Примечание">NaN - Not a Number (не число)</tip> 
<p>Рассмотрим комплексный пример, в котором для реализации взаимодействия с пользователем используются все три метода, описанных выше. Обратите внимание, что для ввода числового значения, метод <code><stdfunc>prompt</stdfunc></code> используется в комбинации с функцией <code><stdfunc>parseInt</stdfunc></code>.</p>
<example number="1.8" title="применение диалоговых окон" href="samples/dialogs.html">
<kw>var</kw> number, summ=<num>0</num>;
<kw>do</kw>
{
    number=<stdfunc>parseInt</stdfunc>(<stdfunc>prompt</stdfunc>(<str>"Введите число:"</str>, <num>10</num>));
    summ+=number;
}
<kw>while</kw>(<stdfunc>confirm</stdfunc>(<str>"Продолжим?"</str>))
<stdfunc>alert</stdfunc>(<str>"Сумма чисел: "</str>+summ);
</example>

<p>В приведенном выше примере используется цикл <code><kw>do</kw> ... <kw>while</kw></code> для реализации многократного повторения действий. С этой конструкцией мы с вами подробно ознакомимся в одном из следующих разделов урока.
</p>
</lesson>
